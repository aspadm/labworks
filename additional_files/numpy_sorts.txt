В  библиотеке  numpy  имеется  несколько  функций для  сортировки  данных.  Рассмотрим  одну  из  них.

numpy.sort(a,  axis=-1,  kind=’quicksort’,  order=None) 
a – исходный  массив
axis – целая  величина  или  None.  При  None  массив  выравнивается  перед  сортировкой. 
По  умолчанию  axis = -1 сортировка  производится  по  последней  оси. 
При  axis = 0  сортировка  идет  по  столбцам,  при  axis = 1  по  строкам  и т. д.
kind – вид  сортировки:  
quicksort – быстрая  сортировка                                                                   
mergesoft – сортировка  слиянием
heapsort – пирамидальная  сортировка
order – порядок:  строка  или  список  строк. 
При  наличии у элемента  нескольких  полей,  можно  указать  по  какому  полю  вести  сортировку  в  первую  очередь, 
во  вторую  и  т. д.

c = b.copy()
c.sort(axis=0,kind='mergesort')
print('сортировка столбцов\n',c, '\n')

c = b.copy()
c.sort(axis=1)
print('сортировка строк\n',c, '\n')


dtype = [('weight',int), ('height',float), ('age', int)]
v = [(70, 1.75, 15), (65, 1.8, 19), (45, 1.85, 16)]
c = np.array(v, dtype=dtype)
#c=sort(axis=0, order = ['weight'])
#print(c)
